var I=Object.defineProperty;var C=(n,e,t)=>e in n?I(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>(C(n,typeof e!="symbol"?e+"":e,t),t);import{S as Q,i as m,s as E,I as f,ac as D}from"../chunks/index.9fe14626.js";import{d as A,g as l,s as B}from"../chunks/store.d3ab02ad.js";import{d as H}from"../chunks/index.78404594.js";const h=`# Calculate Contract Address

When a contract is deployed to the chain, it receives an address by which users can refer to it and send it transactions.

In this example, we have two different contracts: \`Todo1\` and \`Todo2\`. They are deployed separately and each gets its own unique address. As we've seen before, a contract can always know its own address by running \`myAddress()\`.

The special bit in this example is that each contract can also get the address of the other contract by running \`contractAddress(stateInit)\`.

## How is the contract address generated?

Contract addresses on TON are [derived](https://docs.ton.org/learn/overviews/addresses#account-id) from the initial code of the contract (the compiled bytecode) and the initial data of the contract (the arguments of init). 

Both contracts don't have any constructor arguments, so their initial data is the identical. Their addresses are different because their code is different.

The combination of the inital code and the initial data is called the *stateInit* of the contract. Tact gives easy access to the *stateInit* using the \`initOf\` statement.`,b=`import "@stdlib/deploy";

// first contract
contract Todo1 with Deployable {

    seqno: Int as uint64 = 1; // the code specifies the index (sequence number)

    init() {}

    get fun myAddress(): Address {
        return myAddress();
    }

    get fun otherAddress(): Address {
        let init: StateInit = initOf Todo2();
        return contractAddress(init);
    }
}

// second contract
contract Todo2 with Deployable {

    seqno: Int as uint64 = 2; // the code specifies the index (sequence number)

    init() {}

    get fun myAddress(): Address {
        return myAddress();
    }

    get fun otherAddress(): Address {
        let init: StateInit = initOf Todo1();
        return contractAddress(init);
    }
}`;function p(n){return e=>{let t=e;t.storeUint(2490013878,32),t.storeUint(n.queryId,64)}}async function y(){const n=A.Cell.fromBase64("te6ccgECFAEAAu4AART/APSkE/S88sgLAQIBYgIDApTQAdDTAwFxsKMB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiFRQUwNvBPhhAvhi2zxZ2zwwyPhDAcx/AcoAAQHLP8ntVA4EAgEgBwgBmHAh10nCH5UwINcLH94Cklt/4AGCEJRqmLa6jq3THwGCEJRqmLa68uCB0z8BMcgBghCv+Q9XWMsfyz/Jf/hCcFgDgEIBbW3bPH/gMHAFAcrIcQHKAVAHAcoAcAHKAlAFINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiM8WUAP6AnABymgjbrORf5MkbrPilzMzAXABygDjDSFus5x/AcoAASBu8tCAAcyVMXABygDiyQH7AAYAmH8BygDIcAHKAHABygAkbrOdfwHKAAQgbvLQgFAEzJY0A3ABygDiJG6znX8BygAEIG7y0IBQBMyWNANwAcoA4nABygACfwHKAALJWMwCD718Ltnm2eGMDgkCASAKCwAE+CgCASAMDQIBSBITAg+3a/tnm2eGMA4PALm3ejBOC52Hq6WVz2PQnYc6yVCjbNBOE7rGpaVsj5ZkWnXlv74sRzBOBAq4A3AM7HKZywdVyOS2WHBOA3qTvfKost446np7wKs4ZNBOE7Lpy1Zp2W5nQdLNsozdFJABPO1E0NQB+GPSAAGU0z8BMeAw+CjXCwqDCbry4InbPBABivhD2zxwWchwAcsBcwHLAXABywASzMzJ+QDIcgHLAXABywASygfL/8nQINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiBEAAnEAiND0BDBtIYFbpgGAEPQPb6Hy4IcBgVumIgKAEPQXAoFrxQGAEPQPb6Hy4IcSgWvFAQKAEPQXyAHI9ADJAcxwAcoAbTDJABGwr7tRNDSAAGAAdbJu40NWlwZnM6Ly9RbVhZYjJubThEUmlGbjJGY1RXMjV6bUE4VzU2Z1ZQNk1IczFVN0tUdTY5ZVI2gg"),e=A.Cell.fromBase64("te6cckECJgEABH4AAQHAAQIBZhECAQW1eLADART/APSkE/S88sgLBAIBYg4FAgEgDQYCASAJBwIBSBgIAHWybuNDVpcGZzOi8vUW1YWWIybm04RFJpRm4yRmNUVzI1em1BOFc1NmdWUDZNSHMxVTdLVHU2OWVSNoIAIBIAoaAg+3a/tnm2eGMA8LAYr4Q9s8cFnIcAHLAXMBywFwAcsAEszMyfkAyHIBywFwAcsAEsoHy//J0CDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgMAIjQ9AQwbSGBW6YBgBD0D2+h8uCHAYFbpiICgBD0FwKBa8UBgBD0D2+h8uCHEoFrxQECgBD0F8gByPQAyQHMcAHKAG0wyQIPvXwu2ebZ4YwPHwKU0AHQ0wMBcbCjAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IhUUFMDbwT4YQL4Yts8Wds8MMj4QwHMfwHKAAEByz/J7VQPIQE87UTQ1AH4Y9IAAZTTPwEx4DD4KNcLCoMJuvLgids8EAACcQEFt3TQEgEU/wD0pBP0vPLICxMCAWIgFAIBIB4VAgEgGRYCAUgYFwB1sm7jQ1aXBmczovL1FtVFNWc2VRWXNSUWN1TE4xSjNvbXNuVDZDZ1BZSmdmTVZmUEY1eFdTVjU5ZjeCAAEbCvu1E0NIAAYAIBIBsaALm3ejBOC52Hq6WVz2PQnYc6yVCjbNBOE7rGpaVsj5ZkWnXlv74sRzBOBAq4A3AM7HKZywdVyOS2WHBOA3qTvfKost446np7wKs4ZNBOE7Lpy1Zp2W5nQdLNsozdFJACD7dr+2ebZ4YwJBwBivhD2zxwWchwAcsBcwHLAXABywASzMzJ+QDIcgHLAXABywASygfL/8nQINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiB0AiND0BDBtIYFrxQGAEPQPb6Hy4IcBgWvFIgKAEPQXAoFbpgGAEPQPb6Hy4IcSgVumAQKAEPQXyAHI9ADJAcxwAcoAbTDJAg+9fC7Z5tnhjCQfAAT4KAKU0AHQ0wMBcbCjAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IhUUFMDbwT4YQL4Yts8Wds8MMj4QwHMfwHKAAEByz/J7VQkIQGYcCHXScIflTAg1wsf3gKSW3/gAYIQlGqYtrqOrdMfAYIQlGqYtrry4IHTPwExyAGCEK/5D1dYyx/LP8l/+EJwWAOAQgFtbds8f+AwcCIByshxAcoBUAcBygBwAcoCUAUg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIzxZQA/oCcAHKaCNus5F/kyRus+KXMzMBcAHKAOMNIW6znH8BygABIG7y0IABzJUxcAHKAOLJAfsAIwCYfwHKAMhwAcoAcAHKACRus51/AcoABCBu8tCAUATMljQDcAHKAOIkbrOdfwHKAAQgbvLQgFAEzJY0A3ABygDicAHKAAJ/AcoAAslYzAE87UTQ1AH4Y9IAAZTTPwEx4DD4KNcLCoMJuvLgids8JQACcu7MdzQ=");let t=A.beginCell();t.storeRef(e),t.storeUint(0,1);const r=t.endCell();return{code:n,data:r}}const L={2:{message:"Stack undeflow"},3:{message:"Stack overflow"},4:{message:"Integer overflow"},5:{message:"Integer out of expected range"},6:{message:"Invalid opcode"},7:{message:"Type check error"},8:{message:"Cell overflow"},9:{message:"Cell underflow"},10:{message:"Dictionary error"},13:{message:"Out of gas error"},32:{message:"Method ID not found"},34:{message:"Action is invalid or not supported"},37:{message:"Not enough TON"},38:{message:"Not enough extra-currencies"},128:{message:"Null reference exception"},129:{message:"Invalid serialization prefix"},130:{message:"Invalid incoming message"},131:{message:"Constraints error"},132:{message:"Access denied"},133:{message:"Contract stopped"},134:{message:"Invalid argument"},135:{message:"Code of a contract was not found"},136:{message:"Invalid address"},137:{message:"Masterchain support is not enabled for this contract"}};class i{constructor(e,t){a(this,"address");a(this,"init");a(this,"abi",{types:[{name:"StateInit",header:null,fields:[]},{name:"Context",header:null,fields:[]},{name:"SendParameters",header:null,fields:[]},{name:"Deploy",header:2490013878,fields:[]},{name:"DeployOk",header:2952335191,fields:[]}],errors:L});this.address=e,this.init=t}static async init(){return await y()}static async fromInit(){const e=await y(),t=A.contractAddress(0,e);return new i(t,e)}static fromAddress(e){return new i(e)}async send(e,t,r,s){let o=null;if(s&&typeof s=="object"&&!(s instanceof A.Slice)&&s.$$type==="Deploy"&&(o=A.beginCell().store(p(s)).endCell()),o===null)throw new Error("Invalid message type");await e.internal(t,{...r,body:o})}async getMyAddress(e){let t=new A.TupleBuilder;return(await e.get("myAddress",t.build())).stack.readAddress()}async getOtherAddress(e){let t=new A.TupleBuilder;return(await e.get("otherAddress",t.build())).stack.readAddress()}}function M(n){return e=>{let t=e;t.storeUint(2490013878,32),t.storeUint(n.queryId,64)}}async function u(){const n=A.Cell.fromBase64("te6ccgECFAEAAu4AART/APSkE/S88sgLAQIBYgIDApTQAdDTAwFxsKMB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiFRQUwNvBPhhAvhi2zxZ2zwwyPhDAcx/AcoAAQHLP8ntVA4EAgEgBwgBmHAh10nCH5UwINcLH94Cklt/4AGCEJRqmLa6jq3THwGCEJRqmLa68uCB0z8BMcgBghCv+Q9XWMsfyz/Jf/hCcFgDgEIBbW3bPH/gMHAFAcrIcQHKAVAHAcoAcAHKAlAFINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiM8WUAP6AnABymgjbrORf5MkbrPilzMzAXABygDjDSFus5x/AcoAASBu8tCAAcyVMXABygDiyQH7AAYAmH8BygDIcAHKAHABygAkbrOdfwHKAAQgbvLQgFAEzJY0A3ABygDiJG6znX8BygAEIG7y0IBQBMyWNANwAcoA4nABygACfwHKAALJWMwCD718Ltnm2eGMDgkCASAKCwAE+CgCASAMDQIBSBITAg+3a/tnm2eGMA4PALm3ejBOC52Hq6WVz2PQnYc6yVCjbNBOE7rGpaVsj5ZkWnXlv74sRzBOBAq4A3AM7HKZywdVyOS2WHBOA3qTvfKost446np7wKs4ZNBOE7Lpy1Zp2W5nQdLNsozdFJABPO1E0NQB+GPSAAGU0z8BMeAw+CjXCwqDCbry4InbPBABivhD2zxwWchwAcsBcwHLAXABywASzMzJ+QDIcgHLAXABywASygfL/8nQINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiBEAAnIAiND0BDBtIYFrxQGAEPQPb6Hy4IcBgWvFIgKAEPQXAoFbpgGAEPQPb6Hy4IcSgVumAQKAEPQXyAHI9ADJAcxwAcoAbTDJABGwr7tRNDSAAGAAdbJu40NWlwZnM6Ly9RbVRTVnNlUVlzUlFjdUxOMUozb21zblQ2Q2dQWUpnZk1WZlBGNXhXU1Y1OWY3gg"),e=A.Cell.fromBase64("te6cckECJgEABH4AAQHAAQIBZhECAQW1eLADART/APSkE/S88sgLBAIBYg4FAgEgDQYCASAJBwIBSBgIAHWybuNDVpcGZzOi8vUW1YWWIybm04RFJpRm4yRmNUVzI1em1BOFc1NmdWUDZNSHMxVTdLVHU2OWVSNoIAIBIAoaAg+3a/tnm2eGMA8LAYr4Q9s8cFnIcAHLAXMBywFwAcsAEszMyfkAyHIBywFwAcsAEsoHy//J0CDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgMAIjQ9AQwbSGBW6YBgBD0D2+h8uCHAYFbpiICgBD0FwKBa8UBgBD0D2+h8uCHEoFrxQECgBD0F8gByPQAyQHMcAHKAG0wyQIPvXwu2ebZ4YwPHwKU0AHQ0wMBcbCjAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IhUUFMDbwT4YQL4Yts8Wds8MMj4QwHMfwHKAAEByz/J7VQPIQE87UTQ1AH4Y9IAAZTTPwEx4DD4KNcLCoMJuvLgids8EAACcQEFt3TQEgEU/wD0pBP0vPLICxMCAWIgFAIBIB4VAgEgGRYCAUgYFwB1sm7jQ1aXBmczovL1FtVFNWc2VRWXNSUWN1TE4xSjNvbXNuVDZDZ1BZSmdmTVZmUEY1eFdTVjU5ZjeCAAEbCvu1E0NIAAYAIBIBsaALm3ejBOC52Hq6WVz2PQnYc6yVCjbNBOE7rGpaVsj5ZkWnXlv74sRzBOBAq4A3AM7HKZywdVyOS2WHBOA3qTvfKost446np7wKs4ZNBOE7Lpy1Zp2W5nQdLNsozdFJACD7dr+2ebZ4YwJBwBivhD2zxwWchwAcsBcwHLAXABywASzMzJ+QDIcgHLAXABywASygfL/8nQINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiB0AiND0BDBtIYFrxQGAEPQPb6Hy4IcBgWvFIgKAEPQXAoFbpgGAEPQPb6Hy4IcSgVumAQKAEPQXyAHI9ADJAcxwAcoAbTDJAg+9fC7Z5tnhjCQfAAT4KAKU0AHQ0wMBcbCjAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IhUUFMDbwT4YQL4Yts8Wds8MMj4QwHMfwHKAAEByz/J7VQkIQGYcCHXScIflTAg1wsf3gKSW3/gAYIQlGqYtrqOrdMfAYIQlGqYtrry4IHTPwExyAGCEK/5D1dYyx/LP8l/+EJwWAOAQgFtbds8f+AwcCIByshxAcoBUAcBygBwAcoCUAUg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIzxZQA/oCcAHKaCNus5F/kyRus+KXMzMBcAHKAOMNIW6znH8BygABIG7y0IABzJUxcAHKAOLJAfsAIwCYfwHKAMhwAcoAcAHKACRus51/AcoABCBu8tCAUATMljQDcAHKAOIkbrOdfwHKAAQgbvLQgFAEzJY0A3ABygDicAHKAAJ/AcoAAslYzAE87UTQ1AH4Y9IAAZTTPwEx4DD4KNcLCoMJuvLgids8JQACcu7MdzQ=");let t=A.beginCell();t.storeRef(e),t.storeUint(0,1);const r=t.endCell();return{code:n,data:r}}const v={2:{message:"Stack undeflow"},3:{message:"Stack overflow"},4:{message:"Integer overflow"},5:{message:"Integer out of expected range"},6:{message:"Invalid opcode"},7:{message:"Type check error"},8:{message:"Cell overflow"},9:{message:"Cell underflow"},10:{message:"Dictionary error"},13:{message:"Out of gas error"},32:{message:"Method ID not found"},34:{message:"Action is invalid or not supported"},37:{message:"Not enough TON"},38:{message:"Not enough extra-currencies"},128:{message:"Null reference exception"},129:{message:"Invalid serialization prefix"},130:{message:"Invalid incoming message"},131:{message:"Constraints error"},132:{message:"Access denied"},133:{message:"Contract stopped"},134:{message:"Invalid argument"},135:{message:"Code of a contract was not found"},136:{message:"Invalid address"},137:{message:"Masterchain support is not enabled for this contract"}};class g{constructor(e,t){a(this,"address");a(this,"init");a(this,"abi",{types:[{name:"StateInit",header:null,fields:[]},{name:"Context",header:null,fields:[]},{name:"SendParameters",header:null,fields:[]},{name:"Deploy",header:2490013878,fields:[]},{name:"DeployOk",header:2952335191,fields:[]}],errors:v});this.address=e,this.init=t}static async init(){return await u()}static async fromInit(){const e=await u(),t=A.contractAddress(0,e);return new g(t,e)}static fromAddress(e){return new g(e)}async send(e,t,r,s){let o=null;if(s&&typeof s=="object"&&!(s instanceof A.Slice)&&s.$$type==="Deploy"&&(o=A.beginCell().store(M(s)).endCell()),o===null)throw new Error("Invalid message type");await e.internal(t,{...r,body:o})}async getMyAddress(e){let t=new A.TupleBuilder;return(await e.get("myAddress",t.build())).stack.readAddress()}async getOtherAddress(e){let t=new A.TupleBuilder;return(await e.get("otherAddress",t.build())).stack.readAddress()}}function T(n,e,t){let r;f(n,B,c=>t(3,r=c));let s,o;return D(B,r={markdown:h,tactCode:b,deploy:async()=>{const c=await H.Blockchain.create(),d=await c.treasury("deployer");d.getSender(),s=c.openContract(await i.fromInit()),o=c.openContract(await g.fromInit());const w={[d.address.toString()]:"deployer",[s.address.toString()]:"Todo1",[o.address.toString()]:"Todo2"};return[[s,o],w,[await s.send(d.getSender(),{value:A.toNano(1)},{$$type:"Deploy",queryId:0n}),await o.send(d.getSender(),{value:A.toNano(1)},{$$type:"Deploy",queryId:0n})]]},messages:{},getters:{"Todo1.myAddress":async()=>await s.getMyAddress(),"Todo1.otherAddress":async()=>await s.getOtherAddress(),"Todo2.myAddress":async()=>await o.getMyAddress(),"Todo2.otherAddress":async()=>await o.getOtherAddress()},prev:l(import.meta.url).prev,next:l(import.meta.url).next},r),[]}class K extends Q{constructor(e){super(),m(this,e,T,null,E,{})}}export{K as default};
